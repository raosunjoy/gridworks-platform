# TradeMate API Service Dockerfile
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH="/app"

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        postgresql-client \
        redis-tools \
        git \
        nginx \
        supervisor \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .
COPY requirements-prod.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r requirements-prod.txt

# Copy application code
COPY app/ ./app/
COPY tests/ ./tests/
COPY deployment/config/ ./config/
COPY deployment/scripts/ ./scripts/

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/static /app/media

# Set up logging configuration
COPY deployment/logging/logging.conf /app/logging.conf

# Copy entrypoint script
COPY deployment/entrypoint.api.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Create non-root user
RUN addgroup --system gridworks \
    && adduser --system --group gridworks \
    && chown -R gridworks:gridworks /app

# Set security configurations
RUN chmod 700 /app/config \
    && chmod 600 /app/config/* || true

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Switch to non-root user
USER gridworks

# Run entrypoint
ENTRYPOINT ["/entrypoint.sh"]
CMD ["gunicorn", "--config", "/app/config/gunicorn.conf.py", "app.main:app"]